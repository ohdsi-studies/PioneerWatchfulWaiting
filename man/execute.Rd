% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Main.R
\name{execute}
\alias{execute}
\title{Execute the Study}
\usage{
execute(
  databaseDetails,
  outputFolder,
  createProtocol = F,
  createCohorts = F,
  runDiagnostic = F,
  viewDiagnostic = F,
  runAnalyses = F,
  createValidationPackage = F,
  useHydra = F,
  skeletonVersion = "v0.0.1",
  analysesToValidate = NULL,
  packageResults = F,
  minCellCount = 5,
  viewShiny = F,
  onlyFetchData = F,
  sampleSize = NULL,
  logSettings
)
}
\arguments{
\item{databaseDetails}{Database details created using \code{PatientLevelPrediction::createDatabaseDetails()}}

\item{outputFolder}{Name of local folder to place results; make sure to use forward slashes
(/). Do not use a folder on a network drive since this greatly impacts
performance.}

\item{createProtocol}{Creates a protocol based on the analyses specification}

\item{createCohorts}{Create the cohortTable table with the target population and outcome cohorts?}

\item{runDiagnostic}{Runs a diagnostic of the T, O and tar settings for the cdmDatabaseSchema - can be used to check whether to change 
settings or whether the prediction may not do well.}

\item{viewDiagnostic}{Opens a shiny app with the diagnostic results (run after runDiagnostic completes)}

\item{runAnalyses}{Run the model development}

\item{createValidationPackage}{Create a package for sharing the models}

\item{useHydra}{Whether to use Hydra to create the validation package (requires hydra to be installed) or download the master version of the skeleton (requires internet access)}

\item{skeletonVersion}{The version of the validation skeleton to use}

\item{analysesToValidate}{A vector of analysis ids (e.g., c(1,3,10)) specifying which analysese to export into validation package. Default is NULL and all are exported.}

\item{packageResults}{Should results be packaged for later sharing?}

\item{minCellCount}{The minimum number of subjects contributing to a count before it can be included 
in packaged results.}

\item{viewShiny}{View a shiny app with the results}

\item{onlyFetchData}{Only fetch data for the analyses without fitting models. Setting this flag will overwrite your input provided to the runAnalyses and createCohorts parameters.}

\item{sampleSize}{The number of patients in the target cohort to sample (if NULL uses all patients)}

\item{logSettings}{The log setting \code{PatientLevelPrediction::createLogSettings()}}
}
\description{
Execute the Study
}
\details{
This function executes the SkeletonPredictionStudy Study.
}
\examples{
\dontrun{
connectionDetails <- createConnectionDetails(dbms = "postgresql",
                                             user = "joe",
                                             password = "secret",
                                             server = "myserver")
                                             
 databaseDetails <- PatientLevelPrediction::createDatabaseDetails(
 connectionDetails = connectionDetails,
 cdmDatabaseSchema = cdmDatabaseSchema,
 cdmDatabaseName = cdmDatabaseName,
 tempEmulationSchema = tempEmulationSchema,
 cohortDatabaseSchema = cohortDatabaseSchema,
 cohortTable = cohortTable,
 outcomeDatabaseSchema = cohortDatabaseSchema,
 outcomeTable = cohortTable,
 cdmVersion = cdmVersion
 )  
 
 logSettings <- PatientLevelPrediction::createLogSettings(
 verbosity = "INFO",
 timeStamp = T,
 logName = 'skeletonPlp'
 )                                          

execute(databaseDetails = databaseDetails,
        outputFolder = "c:/temp/study_results", 
        createProtocol = T,
        createCohorts = T,
        runDiagnostic = F,
        viewDiagnostic = F,
        runAnalyses = T,
        createValidationPackage = T,
        useHydra = F,
        skeletonVersion = 'v1.0.1',
        packageResults = F,
        minCellCount = 5,
        viewShiny = F,
        sampleSize = 10000,
        logSettings = logSettings
        )
}

}
